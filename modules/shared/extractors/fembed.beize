defaultHeaders := {
    ['User-Agent']: Http.defaultDesktopUserAgent(),
};

getStreamsApiUrl := -> baseUrl, id : Url.ensure(
    '{}/api/source/{}'.format([baseUrl, id])
);

parse := -> async url, locale {
    url = Url.ensure(url);
    parsedUrl := Url.parse(url);
    id := RegExp.new(r'/v/([^?#&/.]+)').firstMatch(url)?.group(1);
    if (!id) return [];

    resp := Http.request({
        method: 'post',
        url: getStreamsApiUrl(parsedUrl.origin, id),
        headers: Object.apply(Object.clone(defaultHeaders), {
            Referer: url,
            ['X-Requested-With']: 'XMLHttpRequest',
        }),
    }).await;
    parsed := Convert.decodeJson(resp.body);
    if (!parsed.success) return [];

    return parsed.data.map(-> x : {
        url: Url.ensure(x.file),
        headers: Object.apply(Object.clone(defaultHeaders), {
            Referer: parsedUrl.origin,
        }),
        quality: x.label,
        locale: locale,
    });
};
