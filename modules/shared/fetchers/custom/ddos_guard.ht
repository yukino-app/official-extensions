import '../http.ht';

class $DDOSGuardFetcher extends $HttpFetcher {
    // tokens := {};

    // getInitialCookie := -> { origin, headers } {
    //     return AsyncTask.resolve(
    //         () => Http.fetch(
    //             method: 'get',
    //             url: checkJsURL,
    //             headers: Collection.mergeMap(headers, {
    //                 'Referer': origin,
    //             }),
    //         ),
    //         onDone: -> resp {
    //             processCookieFromResponse(resp);
    //         },
    //     );
    // }

    request := -> { method, url, headers, tries = 0 } {
        if (tries > _maxTries) throw 'Failed to bypass DDOS guard';

        return AsyncTask.resolve(
            () => Http.fetch(
                method: method,
                url: url,
                headers: attachBypassHeaders(headers),
            ),
            onDone: -> resp {
                // processCookieFromResponse(resp);

                if (resp.statusCode == 403 {
                    return request(
                        method: method,
                        url: url,
                        headers: headers,
                        tries: tries + 1,
                    );

                //     return AsyncTask.resolve(
                //         () => getInitialCookie(
                //             origin: Http.getDomainFromURL(url),
                //             headers: headers,
                //         ),
                //         onDone: (_ {
                            
                //         }
                //     );
                }

                return resp;
            },
        );
    }

    // processCookieFromResponse := -> resp {
    //     if (resp.headers['set-cookie'] != null {
    //         processCookie(resp.headers['set-cookie']);
    //     }
    // }

    // processCookie := -> cookie {
    //     Collection.eachList(
    //         Regex('([^=]+)=([^;]+)').allMatches(cookie),
    //         -> i, x {
    //             key := x.group(1);
    //             value := x.group(2);
    //             if (key.startsWith('__dd') || key == 'XSRF-TOKEN' {
    //                 tokens[_encodeKey(key)] = value;
    //             }
    //         }
    //     );
    // }

    attachBypassHeaders := -> headers {
        return Collection.mergeMap(headers, {
            'Cookie': (headers['Cookie'] ?? '') + cookie,
        });
    }

    get cookie {
        return '__ddg1_=;__ddg2_=;';
    }

    // static const baseURL = 'https://check.ddos-guard.net';
    // checkJsURL := '${baseURL}/check.js';
    static const _maxTries = 2;
    // static const _keyPrefix = 'key-';

    // _encodeKey := -> key {
    //     return '${_keyPrefix}${key}';
    // }

    // _decodeKey := -> key {
    //     return key.replaceFirst(_keyPrefix, '');
    // }
}
